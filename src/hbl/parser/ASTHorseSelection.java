/* Generated By:JJTree: Do not edit this line. ASTHorseSelection.java Version 4.3 */
/* JavaCCOptions:MULTI=true,NODE_USES_PARSER=false,VISITOR=false,TRACK_TOKENS=false,NODE_PREFIX=AST,NODE_EXTENDS=,NODE_FACTORY=,SUPPORT_CLASS_VISIBILITY_PUBLIC=true */
import javax.json.*;
import java.util.List;
import java.util.ArrayList;
public
class ASTHorseSelection extends SimpleNode {
  private Integer race;
  private List<Integer> horses = new ArrayList<Integer>();
  private List<Integer> reserves = new ArrayList<Integer>();
  private Boolean allHorses = false;
  private Boolean fortunaSelect = false;

  public ASTHorseSelection(int id) {
    super(id);
  }

  public ASTHorseSelection(Hbl p, int id) {
    super(p, id);
  }

  public void setAllHorses(Boolean val) {
    allHorses = val;
  }

  public void setFortunaSelect(Boolean val) {
    fortunaSelect = val;
  }

  public void addHorse(Integer h) {
    horses.add(h);
  }

  public void addReserve(Integer r) {
    reserves.add(r);
  }

  public void setRace(Integer r) {
    race = r;
  }

  public void generateSpecifics(JsonObjectBuilder builder) {
    builder.add("race", race);
    if (fortunaSelect) {
      builder.add("fortunaSelect", fortunaSelect);
    }
    if (allHorses) {
      builder.add("allHorses", allHorses);
    } else {
      JsonArrayBuilder myBuilder = Json.createArrayBuilder();
      horses.forEach((horse) -> {
        myBuilder.add(horse);
      });
      builder.add("horses", myBuilder.build());
      if (reserves.size() > 0) {
        final JsonArrayBuilder myBuilder2 = Json.createArrayBuilder();
        reserves.forEach((reserve) -> {
          myBuilder2.add(reserve);
        });
        builder.add("reserves", myBuilder2.build());
      }
    }
  }
}
/* JavaCC - OriginalChecksum=f540a5a7751037e3d677ddf2a4026297 (do not edit this line) */
