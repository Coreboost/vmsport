options {
  STATIC = false;
}
PARSER_BEGIN(Hbl)
  class Hbl {
    public static void main( String[] args ) throws ParseException, TokenMgrError {
      Hbl parser = new Hbl( System.in );
      parser.Start() ;
    }
  }
PARSER_END(Hbl)



SKIP : { "---" : FirstlineMultilineComment }
<FirstlineMultilineComment> SKIP : {"\n" : WithinMultilineComment}
<FirstlineMultilineComment> SKIP : { <~[]> }
<WithinMultilineComment> SKIP : { "---" : LastlineMultilineComment }
<WithinMultilineComment> SKIP : { <~[]> }
<LastlineMultilineComment> SKIP : {"\n" : DEFAULT}
<LastlineMultilineComment> SKIP : { <~[]> }
SKIP : { "--" : SinglelineComment }
<SinglelineComment> SKIP : {"\n" : DEFAULT}
<SinglelineComment> SKIP : { <~[]> }
SKIP : { " " }
SKIP : { "\n" | "\r" | "\r\n" }
TOKEN : { < PERIOD : "." > }
TOKEN : { < COMMA : "," > }
TOKEN : { < COLON : ":" > }
TOKEN : { < NUMBER : (["0"-"9"])+ > }
TOKEN : { < ACCOUNTS : "Accounts:" > }
TOKEN : { < HORSES : "Horses:" > }
TOKEN : { < IDENTIFIER : (["A"-"Z", "a"-"z", "_"])(["A"-"Z", "a"-"z", "0"-"9", "_"])* > }

void Start() :
{}
{
(Accounts() | Horses()) *
<EOF>
}

void Accounts() :
{}
{
  <ACCOUNTS>
  <IDENTIFIER> <COLON> <NUMBER>
  (
  <COMMA> <IDENTIFIER> <COLON> <NUMBER>
  )*
  <PERIOD>
}

void Horses() :
{}
{
  <HORSES>
  <IDENTIFIER> <COLON> <NUMBER>
  (
  <COMMA> <IDENTIFIER> <COLON> <NUMBER>
  )*
  <PERIOD>
}
